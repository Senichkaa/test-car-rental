{"version":3,"file":"static/js/279.11afbc19.chunk.js","mappings":"8OACaA,EAAwB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,eAAgB,EAChEC,EAA2B,SAAAH,GAAK,OAC3CA,EAAMC,SAASG,kBAAmB,EACvBC,EAAyB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,gBAAiB,E,oGCDlEC,EAAgBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sDAK9BC,EAAWH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2GAOrBG,EAAOL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oHAKjBK,EAAAA,EAAAA,YAGEC,EAAWR,EAAAA,GAAAA,KAAWS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,wBACxBK,EAAAA,EAAAA,WAGEG,EAAeV,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,gF,SCEtC,MAlBA,WACE,OACEU,EAAAA,EAAAA,KAACb,EAAa,CAAAc,UACZC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CAAAF,SAAA,EACZD,EAAAA,EAAAA,KAACT,EAAQ,CAAAU,UACPC,EAAAA,EAAAA,MAACT,EAAI,CAAAQ,SAAA,CAAC,oCAC4BD,EAAAA,EAAAA,KAACJ,EAAQ,CAAAK,SAAC,UAAgB,2CAI9DD,EAAAA,EAAAA,KAACF,EAAY,CAAAG,UACXD,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAMC,IAAI,OAAOC,MAAO,aAK5C,ECyBA,EAhCqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IACJ,IAAM3B,GAAW+B,EAAAA,EAAAA,KAAY,SAAAhC,GAAK,OAAIA,EAAMC,SAASgC,SAAS,IAExDC,GADOF,EAAAA,EAAAA,IAAYG,EAAAA,IACCC,QAAO,SAAAC,GAAI,OAAIpC,EAASqC,SAASD,EAAKE,GAAG,IAC7DnC,GAAqB4B,EAAAA,EAAAA,IAAY7B,GACjCD,GAAkB8B,EAAAA,EAAAA,IAAYjC,GAC9ByC,GAAmBR,EAAAA,EAAAA,IAAY3B,GACrC,OACEe,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,UACED,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAAAF,UACZC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACED,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,CACLC,KAAMT,EACNU,QAAS1C,EACT2C,SAAU,SAAAC,GAAK,OAAIlB,GAASmB,EAAAA,EAAAA,IAAoBD,GAAO,EACvDE,WAAY5C,EACZ6C,iBAAkB,SAAAH,GAAK,OAAIlB,GAASsB,EAAAA,EAAAA,IAAsBJ,GAAO,EACjEK,aAAc,SAAAL,GAAK,OAAIlB,GAASwB,EAAAA,EAAAA,IAAmBN,GAAO,KAE5D1B,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CAACV,KAAMvC,EAAqBoC,EAAmBN,KAElD9B,IAAuB8B,EAAaoB,SAAUlC,EAAAA,EAAAA,KAACmC,EAAM,UAKjE,C","sources":["redux/favorite/favoriteSelectors.js","components/NoCars/NoCars.styled.jsx","components/NoCars/NoCars.jsx","components/pages/FavoritePage.jsx"],"sourcesContent":["export const selectFavorites = state => state.favorite.favorites;\nexport const selectFavoriteFilters = state => state.favorite.favoriteFilters;\nexport const selectIsFavoriteFiltered = state =>\n  state.favorite.isFavoriteFiltered;\nexport const selectFavoriteFiltered = state => state.favorite.favoriteFiltered;\n","import { variables } from 'common/Variables';\nimport styled from 'styled-components';\n\nexport const NoCarsSection = styled.section`\n  height: 720px;\n  padding-bottom: 100px;\n`;\n\nexport const TextCont = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 30px;\n  letter-spacing: 0.55px;\n  line-height: 1.35;\n  color: ${variables.basicBlack};\n`;\n\nexport const TextSpan = styled.span`\n  color: ${variables.basicBlue};\n`;\n\nexport const CarContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from 'react';\nimport { MainContainer } from 'common/MainContainer';\nimport audi from '../../assets/audi.png';\nimport {\n  NoCarsSection,\n  TextCont,\n  TextSpan,\n  Text,\n  CarContainer,\n} from './NoCars.styled';\n\nfunction NoCars() {\n  return (\n    <NoCarsSection>\n      <MainContainer>\n        <TextCont>\n          <Text>\n            There is no cars here. Press on <TextSpan>heart</TextSpan> button to\n            add here some favorites\n          </Text>\n        </TextCont>\n        <CarContainer>\n          <img src={audi} alt=\"audi\" width={1100} />\n        </CarContainer>\n      </MainContainer>\n    </NoCarsSection>\n  );\n}\n\nexport default NoCars;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MainContainer } from 'common/MainContainer';\nimport Filter from 'components/Filter/Filter';\nimport Cars from 'components/Cars/Cars';\n\nimport { fetchAllCars } from '../../redux/cars/carsThunk';\nimport {\n  selectFavoriteFilters,\n  selectFavoriteFiltered,\n  selectIsFavoriteFiltered,\n} from '../../redux/favorite/favoriteSelectors';\nimport {\n  setFavoriteFilters,\n  setFavoriteFiltered,\n  setIsFavoriteFiltered,\n} from '../../redux/favorite/favoriteSlice';\nimport { selectAllCars } from '../../redux/cars/carsSelectors';\nimport NoCars from 'components/NoCars/NoCars';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllCars());\n  }, [dispatch]);\n  const favorite = useSelector(state => state.favorite.favorites);\n  const cars = useSelector(selectAllCars);\n  const favoriteCars = cars.filter(item => favorite.includes(item.id));\n  const isFavoriteFiltered = useSelector(selectIsFavoriteFiltered);\n  const favoriteFilters = useSelector(selectFavoriteFilters);\n  const filteredFavorite = useSelector(selectFavoriteFiltered);\n  return (\n    <>\n      <MainContainer>\n        <section>\n          <Filter\n            cars={favoriteCars}\n            filters={favoriteFilters}\n            inFilter={value => dispatch(setFavoriteFiltered(value))}\n            isFiltered={isFavoriteFiltered}\n            changeIsFiltered={value => dispatch(setIsFavoriteFiltered(value))}\n            changeFilter={value => dispatch(setFavoriteFilters(value))}\n          />\n          <Cars cars={isFavoriteFiltered ? filteredFavorite : favoriteCars} />\n\n          {!isFavoriteFiltered && !favoriteCars.length && <NoCars />}\n        </section>\n      </MainContainer>\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["selectFavoriteFilters","state","favorite","favoriteFilters","selectIsFavoriteFiltered","isFavoriteFiltered","selectFavoriteFiltered","favoriteFiltered","NoCarsSection","styled","_templateObject","_taggedTemplateLiteral","TextCont","_templateObject2","Text","_templateObject3","variables","TextSpan","_templateObject4","CarContainer","_templateObject5","_jsx","children","_jsxs","MainContainer","src","audi","alt","width","dispatch","useDispatch","useEffect","fetchAllCars","useSelector","favorites","favoriteCars","selectAllCars","filter","item","includes","id","filteredFavorite","_Fragment","Filter","cars","filters","inFilter","value","setFavoriteFiltered","isFiltered","changeIsFiltered","setIsFavoriteFiltered","changeFilter","setFavoriteFilters","Cars","length","NoCars"],"sourceRoot":""}