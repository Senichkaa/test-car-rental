{"version":3,"file":"static/js/572.b534f7e9.chunk.js","mappings":"oOACaA,EAAwB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,eAAgB,EAChEC,EAA2B,SAAAH,GAAK,OAC3CA,EAAMC,SAASG,kBAAmB,EACvBC,EAAyB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,gBAAiB,E,6BC6C/E,EA9BqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACX,GAAG,CAACH,IACJ,IAAMN,GAAWU,EAAAA,EAAAA,KAAY,SAAAX,GAAK,OAAIA,EAAMC,SAASW,SAAS,IAExDC,GADOF,EAAAA,EAAAA,IAAYG,EAAAA,IACCC,QAAO,SAAAC,GAAI,OAAIf,EAASgB,SAASD,EAAKE,GAAG,IAC7Dd,GAAqBO,EAAAA,EAAAA,IAAYR,GACjCD,GAAkBS,EAAAA,EAAAA,IAAYZ,GAC9BoB,GAAmBR,EAAAA,EAAAA,IAAYN,GACrC,OACEe,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAAAD,UACZE,EAAAA,EAAAA,MAAA,WAAAF,SAAA,EACEF,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CACLC,KAAMb,EACNc,QAASzB,EACT0B,SAAU,SAAAC,GAAK,OAAItB,GAASuB,EAAAA,EAAAA,IAAoBD,GAAO,EACvDE,WAAY3B,EACZ4B,iBAAkB,SAAAH,GAAK,OAAItB,GAAS0B,EAAAA,EAAAA,IAAsBJ,GAAO,EACjEK,aAAc,SAAAL,GAAK,OAAItB,GAAS4B,EAAAA,EAAAA,IAAmBN,GAAO,KAE5DT,EAAAA,EAAAA,KAACgB,EAAAA,EAAI,CAACV,KAAMtB,EAAqBe,EAAmBN,UAK9D,C","sources":["redux/favorite/favoriteSelectors.js","components/pages/FavoritePage.jsx"],"sourcesContent":["export const selectFavorites = state => state.favorite.favorites;\nexport const selectFavoriteFilters = state => state.favorite.favoriteFilters;\nexport const selectIsFavoriteFiltered = state =>\n  state.favorite.isFavoriteFiltered;\nexport const selectFavoriteFiltered = state => state.favorite.favoriteFiltered;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MainContainer } from 'common/MainContainer';\nimport Filter from 'components/Filter/Filter';\nimport Cars from 'components/Cars/Cars';\n\nimport { fetchAllCars } from '../../redux/cars/carsThunk';\nimport {\n  selectFavoriteFilters,\n  selectFavoriteFiltered,\n  selectIsFavoriteFiltered,\n} from '../../redux/favorite/favoriteSelectors';\nimport {\n  setFavoriteFilters,\n  setFavoriteFiltered,\n  setIsFavoriteFiltered,\n} from '../../redux/favorite/favoriteSlice';\nimport { selectAllCars } from '../../redux/cars/carsSelectors';\n\nconst FavoritePage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllCars());\n  }, [dispatch]);\n  const favorite = useSelector(state => state.favorite.favorites);\n  const cars = useSelector(selectAllCars);\n  const favoriteCars = cars.filter(item => favorite.includes(item.id));\n  const isFavoriteFiltered = useSelector(selectIsFavoriteFiltered);\n  const favoriteFilters = useSelector(selectFavoriteFilters);\n  const filteredFavorite = useSelector(selectFavoriteFiltered);\n  return (\n    <>\n      <MainContainer>\n        <section>\n          <Filter\n            cars={favoriteCars}\n            filters={favoriteFilters}\n            inFilter={value => dispatch(setFavoriteFiltered(value))}\n            isFiltered={isFavoriteFiltered}\n            changeIsFiltered={value => dispatch(setIsFavoriteFiltered(value))}\n            changeFilter={value => dispatch(setFavoriteFilters(value))}\n          />\n          <Cars cars={isFavoriteFiltered ? filteredFavorite : favoriteCars} />\n        </section>\n      </MainContainer>\n    </>\n  );\n};\n\nexport default FavoritePage;\n"],"names":["selectFavoriteFilters","state","favorite","favoriteFilters","selectIsFavoriteFiltered","isFavoriteFiltered","selectFavoriteFiltered","favoriteFiltered","dispatch","useDispatch","useEffect","fetchAllCars","useSelector","favorites","favoriteCars","selectAllCars","filter","item","includes","id","filteredFavorite","_jsx","_Fragment","children","MainContainer","_jsxs","Filter","cars","filters","inFilter","value","setFavoriteFiltered","isFiltered","changeIsFiltered","setIsFavoriteFiltered","changeFilter","setFavoriteFilters","Cars"],"sourceRoot":""}